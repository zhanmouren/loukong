<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.koron.inwlms.mapper.sysManager.UserMapper">
   <!-- 插入职员信息 -->
   <insert id="addUser" parameterType="com.koron.inwlms.bean.DTO.sysManager.UserDTO" >  
        insert into "SM_user"("loginName",passWord,phone,"Email",name,position,sex,photo,"openID",status,"workNo","whetUse","createBy","createTime","updateBy","updateTime","code")
        values(#{loginName},#{password},#{phone},#{Email},#{name},#{position},#{sex},#{photo},#{openID},0,#{workNo},0,#{createBy},#{createTime},#{updateBy},#{updateTime},#{code})   
    </insert>
     <!-- 查询相关职员信息 -->
    <select id="queryUser"  parameterType="com.koron.inwlms.bean.DTO.sysManager.QueryUserDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.UserVO">
      select "user".id as "userId","user"."loginName",case when "user".phone is null then '' else "user".phone end,case when "user"."Email" is null then '' else "user"."Email" end,"user".name,"user".position,case when "user".sex is null then -1 else "user".sex end,"user".photo,"user"."openID","user".status,"user"."workNo",
	  "user"."whetUse","user"."createBy","user"."createTime","user"."updateBy","user"."updateTime",case when "dept".name is null then '' else "dept".name  end as "depname","user".code  as code    
	   from "SM_user" as "user"       
	   left join "SM_userDept" as "userdept" on "userdept"."userCode"="user".Code   
	   left join "SM_department" as "dept"   on "dept".code="userdept"."deptCode"      
       <trim prefix="where" prefixOverrides="and|or">
		<if test="name != null  and name !='' "> and "user".name like '%${name}%'</if>  
   	    <if test="depName != null  and depName !='' "> and "dept".name like '%${depName}%'</if>
   	    <if test="userId != null"> and "user".id ='${userId}'</if>  
   	    <if test="status != null"> and "user".status ='${status}'</if>
   	    <if test="whetUse != null"> and "user"."whetUse" ='${whetUse}'</if>
   	    <if test="code != null"> and "user".code = #{code}</if> 
   	    <if test="loginName != null"> and "user"."loginName" = #{loginName}</if> 
   	    <if test="workNo != null"> and "user"."workNo" = #{workNo}</if>           
	  </trim>
	   order by "user"."createTime" desc
	   limit #{pageCount} OFFSET #{pageCount}*(#{page}-1);
    </select>
    
    <!-- 查询相关职员信息总条数 -->
    <select id="getUserCount"  parameterType="com.koron.inwlms.bean.DTO.sysManager.QueryUserDTO" resultType="java.lang.Integer">
        select count(*) from "SM_user" as "user"
         <trim prefix="where" prefixOverrides="and|or">
          <if test="whetUse != null"> and "user"."whetUse" ='${whetUse}'</if>
         </trim>
    </select>
    
    <!-- 修改职员信息 -->
    <update id="updateUser" parameterType="com.koron.inwlms.bean.DTO.sysManager.UserDTO">   
		update "SM_user" 
		<set>	    
             <if test="name != null  and name !=''" > name = #{name},  </if>                       
             <if test="loginName != null and loginName !=''" > "loginName" = #{loginName},</if>            
             <if test="password != null and password !=''" > password = #{password}, </if>                       
             <if test="sex != null" >sex = #{sex,jdbcType=INTEGER}, </if>                        
             <if test="Email != null and Email != ''" > "Email" = #{Email}, </if>               
             <if test="updateBy != null and updateBy!=''" >  "updateBy" = #{updateBy},</if>                        
             <if test="updateTime != null" > "updateTime" = #{updateTime},</if>  
             <if test="status != null" > status = #{status},  </if>               
		</set>
		where code=#{code}
     </update>
     <!-- 修改用户信息,删除 -->
    <update id="deleteUser" parameterType="com.koron.inwlms.bean.DTO.sysManager.UserDTO">   
		update "SM_user" 
		<set>	                                 
             <if test="whetUse != null" > "whetUse" = #{whetUse},</if> 
        </set>
		where code=#{code}
     </update>
      <!-- 添加新角色 -->
     <insert id="addNewRole" parameterType="com.koron.inwlms.bean.DTO.sysManager.RoleDTO">  
        insert into "SM_userRole"(name,remark,"createBy","createTime","updateBy","updateTime",code)
        values(#{roleName},#{roleRemark},#{createBy},#{createTime},#{updateBy},#{updateTime},#{roleCode})     
    </insert>
    
     <!-- 查询添加的新角色名称是否重复 -->
    <select id="queryRoleByName"  parameterType="com.koron.inwlms.bean.DTO.sysManager.RoleDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.RoleVO">
       select "role".name as "roleName","role".code as "roleCode"
       from  "SM_userRole" as "role"
       where "role"."name"=#{roleName}
    </select>
    
     <!-- 修改角色属性 -->
    <update id="updateRoleAttr" parameterType="com.koron.inwlms.bean.DTO.sysManager.RoleDTO">   
		update "SM_userRole" 
		<set>	                                 
             <if test="roleName != null" > name= #{roleName},</if>            
             <if test="roleRemark != null" > remark= #{roleName},</if>
             <if test="updateBy != null and updateBy!=''" > "updateBy" = #{updateBy},</if>                        
             <if test="updateTime != null" > "updateTime" = #{updateTime},</if>   
        </set>
		where code=#{roleCode}
     </update>
     <!-- 查询该角色下有没有绑定职员 -->
     <select id="queryRoleUser"  parameterType="com.koron.inwlms.bean.DTO.sysManager.RoleDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.RoleMsgVO">
       select "userRole".name as roleName
       from  "SM_userRoleRelation" as "userRela"
       left join  "SM_userRole" as "userRole" on "userRole".code="userRela"."roleCode"
       where "userRela"."roleCode"=#{roleCode}
       order by "userRole"."createTime" desc
    </select>
    
    <!-- 批量删除角色信息 -->
    <delete id="delRole" parameterType="String">
        delete from "SM_userRole" where code in
        <foreach item="roleItem" collection="list" open="(" separator="," close=")">
            #{roleItem}
        </foreach>
    </delete>
    
    <!--根据角色Code加载角色人员列表接口 -->
     <select id="queryUserByRoleCode"  parameterType="com.koron.inwlms.bean.DTO.sysManager.RoleDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.UserVO">
       select "user".id as "userId","user"."loginName",case when "user".phone is null then '' else "user".phone end,case when "user"."Email" is null then '' else "user"."Email" end,"user".name,"user".position,case when "user".sex is null then -1 else "user".sex end,"user".photo,"user"."openID","user".status,"user"."workNo",
	  "user"."whetUse","user"."createBy","user"."createTime","user"."updateBy","user"."updateTime",case when  "dept".name is null then '' else "dept".name end as "depname","user".code as code
       from "SM_userRoleRelation" as "userRela"
       left join "SM_user" as "user" on "userRela"."userCode"="user".code
       left join "SM_userDept" as "userdept" on "userdept"."userCode"="user".code    
	   left join "SM_department" as "dept"   on "dept".code="userdept"."deptCode"
       where "userRela"."roleCode"=#{roleCode} and "user"."whetUse"=0
       order by "user"."createTime" desc
        limit #{pageCount} OFFSET #{pageCount}*(#{page}-1);
    </select>
    
     <!--根据角色Code加载角色人员总条数 -->
     <select id="getRoleUserCount"  parameterType="com.koron.inwlms.bean.DTO.sysManager.RoleDTO"  resultType="java.lang.Integer">
       select count(*) 
       from "SM_userRoleRelation" as "userRela"
       left join "SM_user" as "user" on "userRela"."userCode"="user".code
       left join "SM_userDept" as "userdept" on "userdept"."userCode"="user".code    
	   left join "SM_department" as "dept"   on "dept".code="userdept"."deptCode"
       where "userRela"."roleCode"=#{roleCode}     
    </select>
    
    <!--查询所有角色列表 -->
    <select id="queryAllRole"  resultType="com.koron.inwlms.bean.VO.sysManager.RoleVO">
       select id as "roleId",name as "roleName",remark as "roleRemark","createBy","createTime","updateBy","updateTime",code as "roleCode" 
       from "SM_userRole" 
       order by "createTime" desc
    </select>
    
    <!--遍历插入职员与角色的关系 -->
    <insert id="addRoleUser" parameterType="java.util.List">  
        insert into "SM_userRoleRelation"("userCode", "roleCode","createBy","createTime","updateBy","updateTime")values
		<foreach collection="list" item="roleuser"  index="index" separator=",">
			(#{roleuser.userCode}, #{roleuser.roleCode}, #{roleuser.createBy}, #{roleuser.createTime}, #{roleuser.updateBy}, #{roleuser.updateTime})
		</foreach>
    </insert>
    
     <!-- 批量删除角色中员工信息 -->
    <delete id="deleteRoleUser">
        delete from "SM_userRoleRelation" where "roleCode"=#{roleCode} 
        and "userCode" in
        <foreach item="userItem" collection="list" open="(" separator="," close=")">
            #{userItem}
        </foreach>
    </delete>
    
     <!-- 角色弹窗选择职员 -->
     <select id="queryExceptRoleUser"  parameterType="com.koron.inwlms.bean.DTO.sysManager.RoleAndUserDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.UserVO">
       select "user".id as "userId","user"."loginName",case when "user".phone is null then '' else "user".phone end,"user"."Email","user".name,"user".position,"user".sex,"user".photo,"user"."openID","user".status,"user"."workNo",
	   "user"."whetUse","user"."createBy","user"."createTime","user"."updateBy","user"."updateTime",case when "dept".name is null then '' else "dept".name  end as "depname","user".code as code     
	   from "SM_user" as "user"       
	   left join "SM_userDept" as "userdept" on "userdept"."userCode"="user".code    
	   left join "SM_department" as "dept"   on "dept".code="userdept"."deptCode" 
	   where "user".code not in(select "userrela"."userCode" from "SM_userRoleRelation" as "userrela" where "userrela"."roleCode" =#{roleCode})	
	   and "user"."whetUse"=0
	   order by "user"."createTime" desc 
	   limit #{pageCount} OFFSET #{pageCount}*(#{page}-1);
     </select>
     <!-- 角色弹窗选择职员 查询总条数 -->
     <select id="getExceptRoleUserCount"  parameterType="com.koron.inwlms.bean.DTO.sysManager.RoleAndUserDTO"  resultType="java.lang.Integer">
       select count(*) 
	   from "SM_user" as "user"       
	   left join "SM_userDept" as "userdept" on "userdept"."userCode"="user".code    
	   left join "SM_department" as "dept"   on "dept".code="userdept"."deptCode" 
	   where "user".code not in(select "userrela"."userCode" from "SM_userRoleRelation" as "userrela" where "userrela"."roleCode" =#{roleCode})		   
     </select>
     
      <!-- 部门弹窗选择职员 -->
     <select id="queryExceptDeptUser"  parameterType="com.koron.inwlms.bean.DTO.sysManager.DeptAndUserDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.UserVO">
       select "user".id as "userId","user"."loginName",case when "user".phone is null then '' else "user".phone end,"user"."Email","user".name,"user".position,"user".sex,"user".photo,"user"."openID","user".status,"user"."workNo",
	   "user"."whetUse","user"."createBy","user"."createTime","user"."updateBy","user"."updateTime",case when "dept".name is null then '' else "dept".name  end as "depname" ,"user".code     
	   from "SM_user" as "user"       
	   left join "SM_userDept" as "userdept" on "userdept"."userCode"="user".code    
	   left join "SM_department" as "dept"   on "dept".code="userdept"."deptCode" 
	   where "user".code not in(select "deptuser"."userCode" from "SM_userDept" as "deptuser" where "deptuser"."deptCode" =#{depCode})
	   and "user"."whetUse"=0
	   order by "user"."createTime" desc	
	   limit #{pageCount} OFFSET #{pageCount}*(#{page}-1); 
     </select>
     
      <!-- 部门弹窗选择职员 查询总条数 -->
     <select id="getExceptDeptUserCount"  parameterType="com.koron.inwlms.bean.DTO.sysManager.DeptAndUserDTO"  resultType="java.lang.Integer">
       select count(*)
	   from "SM_user" as "user"       
	   left join "SM_userDept" as "userdept" on "userdept"."userCode"="user".code    
	   left join "SM_department" as "dept"   on "dept".code="userdept"."deptCode" 
	   where "user".code not in(select "deptuser"."userCode" from "SM_userDept" as "deptuser" where "deptuser"."deptCode" =#{depCode})
	   	 
     </select>
     
     <!--遍历插入职员与部门的关系 -->
    <insert id="addDeptUser" parameterType="java.util.List">  
        insert into "SM_userDept"("userCode", "deptCode","createBy","createTime","updateBy","updateTime")values
		<foreach collection="list" item="deptuser"  index="index" separator=",">
			(#{deptuser.userCode}, #{deptuser.depCode}, #{deptuser.createBy}, #{deptuser.createTime}, #{deptuser.updateBy}, #{deptuser.updateTime})
		</foreach>
    </insert>
    
     <!-- 批量删除部门中员工信息 -->
    <delete id="deleteDeptUser">
        delete from "SM_userDept" where "deptCode"=#{depCode} 
        and "userCode" in
        <foreach item="userItem" collection="list" open="(" separator="," close=")">
            #{userItem}
        </foreach>
    </delete>
    
    
    <!-- 遍历插入数据字典主表信息记录 -->
    <insert id="addDataDic" parameterType="java.util.List">  
        insert into "SM_dataDictionary"(cn,en,remark,parent,key,value,seq,"createBy","createTime","updateBy","updateTime")values
        <foreach collection="list" index="index" separator="," item="item">
          (#{item.dicCn},#{item.dicEn},#{item.dicRemark},#{item.dicParent},#{item.dicKey},#{item.dicValue},#{item.dicSeq},#{item.createBy},#{item.createTime},#{item.updateBy},#{item.updateTime})  
        </foreach>      
    </insert>
    
    <!-- 插入数据字典主表信息记录 -->
    <insert id="addMainDataDic" parameterType="com.koron.inwlms.bean.DTO.sysManager.DataDicDTO">  
        insert into "SM_dataDictionary"(cn,en,remark,parent,"createBy","createTime","updateBy","updateTime")
        values  (#{dicCn},#{dicEn},#{dicRemark},#{dicParent},#{createBy},#{createTime},#{updateBy},#{updateTime})            
    </insert>
    
     <!-- 插入数据字典明细信息一条记录 -->
    <insert id="addOneDataDet" parameterType="com.koron.inwlms.bean.DTO.sysManager.DataDicDTO">  
        insert into "SM_dataDictionary"(cn,en,remark,parent,key,value,seq,"createBy","createTime","updateBy","updateTime")
        values  (#{dicCn},#{dicEn},#{dicRemark},#{dicParent},#{dicKey},#{dicValue},#{dicSeq},#{createBy},#{createTime},#{updateBy},#{updateTime})            
    </insert>
    
     <!-- 查询数据字典 主标识明细的信息-->
      <select id="queryDataDic"  parameterType="com.koron.inwlms.bean.DTO.sysManager.DataDicDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.DataDicVO">
          select "dic".id as dicId,"dic".parent as dicParent,"dic".cn as "dicCn","dic".en as "dicEn","dic".remark as dicRemark,"dic".key as dicKey,"dic".value as dicValue,"dic".seq as dicSeq,"dic"."createBy" as createBy,"dic"."createTime" as createTime,"dic"."updateBy" as updateBy,"dic"."updateTime" as updateTime 
          from "SM_dataDictionary" as "dic"
	      <trim prefix="where" prefixOverrides="and|or">
	        <if test="dicId != null"> and "dic".id = '${dicId}'</if>
			<if test="dicParent != null"> and "dic".parent like '%${dicParent}%'</if>  
	   	    <if test="dicEn != null"> and "dic".en like '%${dicEn}%'</if>
	   	    <if test="dicCn != null"> and "dic".cn like '%${dicCn}%'</if>
	   	    <if test="dicRemark != null"> and "dic".remark ='${dicRemark}'</if>  
	   	    <if test="dicKey != null"> and "dic".key ='${dicKey}'</if>
	   	    <if test="dicValue != null"> and "dic"."value" ='${dicValue}'</if>          
		  </trim>
		  order by "dic".seq
      </select>
       <!-- 查询数据字典 是否已经存在该Parent的信息-->
      <select id="queryParentDic"  parameterType="com.koron.inwlms.bean.DTO.sysManager.DataDicDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.DataDicVO">
          select "dic".id as dicId,"dic".parent as dicParent,"dic".cn as "dicCn","dic".en as "dicEn","dic".remark as dicRemark,"dic".key as dicKey,"dic".value as dicValue,"dic".seq as dicSeq,"dic"."createBy" as createBy,"dic"."createTime" as createTime,"dic"."updateBy" as updateBy,"dic"."updateTime" as updateTime 
          from "SM_dataDictionary" as "dic"
	      <trim prefix="where" prefixOverrides="and|or">
			<if test="dicParent != null"> and "dic".parent = '${dicParent}'</if>          
		  </trim>
      </select>
      
       <!-- 根据parent查询数据字典主信息-->
      <select id="queryDic"  parameterType="com.koron.inwlms.bean.DTO.sysManager.DataDicDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.DataDicVO">
          select "dic".id as dicId,"dic".parent as dicParent,"dic".cn as "dicCn","dic".en as "dicEn","dic".remark as dicRemark,"dic".key as dicKey,"dic".value as dicValue,"dic".seq as dicSeq,"dic"."createBy" as createBy,"dic"."createTime" as createTime,"dic"."updateBy" as updateBy,"dic"."updateTime" as updateTime 
          from "SM_dataDictionary" as "dic"	      
		  where  "dic".parent = #{dicParent}       	  
      </select>
      
        <!-- 查询数据字典 主标识主的信息-->
      <select id="queryMainDataDic"  parameterType="com.koron.inwlms.bean.DTO.sysManager.DataDicDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.DataDicVO">
          select distinct "dic".parent as dicParent,"dic".cn as "dicCn","dic".en as "dicEn","dic".remark as dicRemark
          from "SM_dataDictionary" as "dic"
	      <trim prefix="where" prefixOverrides="and|or">
	        <if test="dicId != null"> and "dic".id = '${dicId}'</if>
			<if test="dicParent != null"> and "dic".parent like '%${dicParent}%'</if>  
	   	    <if test="dicEn != null"> and "dic".en like '%${dicEn}%'</if>
	   	    <if test="dicCn != null"> and "dic".cn like '%${dicCn}%'</if>
	   	    <if test="dicRemark != null"> and "dic".remark ='${dicRemark}'</if>  
	   	    <if test="dicKey != null"> and "dic".key ='${dicKey}'</if>
	   	    <if test="dicValue != null"> and "dic"."value" ='${dicValue}'</if>          
		  </trim>	  
		 group by "dic".parent ,"dic".cn ,"dic".en ,"dic".remark
		 order by "dic"."parent" desc
		 limit #{pageCount} OFFSET #{pageCount}*(#{page}-1);
      </select>
        <!-- 查询数据字典 主标识主的信息 总条数-->
      <select id="getDataDicCount"     resultType="java.lang.Integer">
          select count(*)
          from (select distinct "dic".parent as dicParent,"dic".cn as "dicCn","dic".en as "dicEn","dic".remark as dicRemark
          from "SM_dataDictionary" as "dic"	  
		  group by "dic".parent ,"dic".cn ,"dic".en ,"dic".remark) as "dic"
      </select>
      
       <!-- 修改数据字典主的信息 根据parent-->
       <update id="updateDicById" parameterType="com.koron.inwlms.bean.DTO.sysManager.DataDicDTO">   
		update "SM_dataDictionary" 
		<set>	                                 
             <if test="dicEn != null"> en = #{dicEn},</if>
	   	     <if test="dicCn != null"> cn = #{dicCn},</if>
	   	     <if test="dicRemark != null">  remark =#{dicRemark},</if>  
             <if test="updateBy != null" >  "updateBy" = #{updateBy},</if>                        
             <if test="updateTime != null" > "updateTime" = #{updateTime},</if>   
        </set>
		where  parent=#{dicParent}
     </update>
     
      <!-- 删除数据字典(通过parent),还要实现批量 -->
     <delete id="deleteDicById">
         delete from "SM_dataDictionary" where "parent" in
          <foreach item="dicitem" collection="list" open="(" separator="," close=")">
            #{dicitem.dicParent}
          </foreach>
     </delete>
      <!-- 删除数据字典(通过parent) -->
      <delete id="deleteOneDic">
         delete from "SM_dataDictionary" where "parent" =#{dicParent}
         and "key" is null and "value" is null
     </delete>
     
      <!-- 修改数据字典主的信息 根据Id-->
       <update id="updateDicDetById" parameterType="com.koron.inwlms.bean.DTO.sysManager.DataDicDTO">   
		update "SM_dataDictionary" 
		<set>	                                 
             <if test="dicKey != null" > key= #{dicKey},</if>            
             <if test="dicValue != null" > value= #{dicValue},</if>
             <if test="dicSeq != null" > seq= #{dicSeq},</if>
             <if test="updateBy != null" > "updateBy" = #{updateBy},</if>                        
             <if test="updateTime != null" > "updateTime" = #{updateTime},</if>   
        </set>
		where  id=#{dicId}
	   </update>
	   
	  <!-- 删除数据字典(通过Id),还要实现批量 -->
     <delete id="deleteDetDicById">
         delete from "SM_dataDictionary" where "id" in
          <foreach item="dicitem" collection="list" open="(" separator="," close=")">
            #{dicitem.dicId}
          </foreach>
     </delete>
    
     <!-- 插入特征日表信息一条记录 -->
    <insert id="addSpecialDate" parameterType="com.koron.inwlms.bean.DTO.sysManager.SpecialDayDTO">  
        insert into "SM_specialDay"(name,remark,"spDate","createBy","createTime","updateBy","updateTime")values
         (#{spName},#{spRemark},#{spDate},#{createBy},#{createTime},#{updateBy},#{updateTime})
    </insert>
    
     <!-- 查询特征日 是否已经存在该特征日的信息-->
      <select id="queryExistSp"  parameterType="com.koron.inwlms.bean.DTO.sysManager.SpecialDayDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.SpecialDayVO">
          select "sp".id as spId,"sp".name as spName,"sp".remark as spRemark,"sp"."spDate" as spDate,"sp"."createBy" as createBy,"sp"."createTime" as createTime,"sp"."updateBy" as updateBy,"sp"."updateTime" as updateTime 
          from "SM_specialDay" as "sp"
	      <trim prefix="where" prefixOverrides="and|or">
			<if test="spDate != null"> and "sp"."spDate" = '${spDate}'</if>          
		  </trim>
      </select>
      
       <!-- 查询某年某月特征日-->
      <select id="querySpecialDate"  parameterType="com.koron.inwlms.bean.DTO.sysManager.SpecialDayDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.SpecialDayVO">
        select yearmonth.orderdate as "spDate",case when sp.name is null then '' else sp.name end as "spName",case when sp.remark is null then '' else sp.remark end as "spRemark" from 
		(select to_char(tt.day, 'yyyy-mm-dd') as orderDate
		from (select generate_series(cast(to_char(to_date('${startTime}', 'YYYY-MM'), 'yyyy-mm') || '-01' as date),
		                             cast(
		                               cast(to_char(to_date('${endTime}', 'YYYY-MM'), 'yyyy-mm') || '-01' as timestamp) + '-1 d'
		                               as date), '1 d') as day) as tt
		order by orderDate) as yearmonth
		left join "SM_specialDay" as sp on sp."spDate"=yearmonth.orderdate
      </select>
      
        <!-- 查询根据某日日期查询特征日信息-->
      <select id="querySpecialDateByDay"  parameterType="com.koron.inwlms.bean.DTO.sysManager.SpecialDayDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.SpecialDayVO">
         select "sp".id as "spId","sp".Name as "spName",case when "sp".remark is null then '' else "sp".remark end as "spRemark","sp"."spDate" as "spDate"
         from "SM_specialDay" as "sp"
         where "sp"."spDate" =#{spDate}
      </select>
      
      <!-- 根据日期删除特征日 -->
     <delete id="deleteSpecialDate">
         delete from "SM_specialDay" 
         where "spDate"=#{spDate}
     </delete>
     
      <!-- 修改数据字典主的信息 根据日期-->
       <update id="updateSpecialDate" parameterType="com.koron.inwlms.bean.DTO.sysManager.DataDicDTO">   
		update "SM_specialDay" 
		<set>	                                 
             <if test="spName != null" > name= #{spName},</if>            
             <if test="spRemark != null" > remark= #{spRemark},</if> 
        </set>
		where  "spDate"=#{spDate}
	   </update>
	   
	  <!-- 树形组件 -->
    
      <!-- 插入部门主表信息一条记录 -->
    <select id="addDeptNew" parameterType="com.koron.inwlms.bean.DTO.sysManager.OrgAndDeptDTO" resultType="Integer">  
        insert into "SM_department"(code,name,status,"createBy","createTime","updateBy","updateTime")
        values(#{depCode},#{depName},#{depStatus},#{createBy},#{createTime},#{updateBy},#{updateTime})returning id         
    </select>
     <!-- 插入组织部门表中-->
     <insert id="addOrgDept" parameterType="com.koron.inwlms.bean.DTO.sysManager.OrgAndDeptDTO">  
        insert into "SM_orgDept"("orgCode","deptCode","createBy","createTime","updateBy","updateTime")
        values(#{orgCode},#{depCode},#{createBy},#{createTime},#{updateBy},#{updateTime})       
     </insert>
      <!--部门下添加部门-->
     <insert id="deptAddTreeDept" parameterType="com.koron.inwlms.bean.DTO.sysManager.OrgAndDeptDTO">  
        insert into "SM_department"(code,name,status,"createBy","createTime","updateBy","updateTime")
        values(#{depCode},#{depName},#{depStatus},#{createBy},#{createTime},#{updateBy},#{updateTime})      
     </insert>
     
      <!-- 根据外键Code查询删除的部门节点下是否存在职员-->
      <select id="judgeExistUser"  parameterType="com.koron.inwlms.bean.DTO.sysManager.DeptAndUserDTO"  resultType="com.koron.inwlms.bean.VO.sysManager.DeptAndUserVO">
          select  "dept".name as "depName","user".id as "userId","user".name as "name"
          from "SM_user" as "user"
          left join "SM_userDept" as "userdept" on "user".code="userdept"."userCode"
          left join  "SM_department" as "dept" on "userdept"."deptCode"= "dept".code 
          where "dept".code=#{depCode}       
      </select>
     
       <!--物理删除部门，部门表 根据外键Code -->
     <delete id="deleteTreeDept">
         delete from "SM_department" 
         where "code"=#{depCode}
     </delete>
     
     <!-- 修改部门名称，通过部门ID-->
       <update id="updateTreeDept" parameterType="com.koron.inwlms.bean.DTO.sysManager.DeptDTO">   
		update "SM_department" 
		<set>	                                 
             <if test="depName != null" > name= #{depName},</if>            
             <if test="updateBy != null" > "updateBy" = #{updateBy},</if>                        
             <if test="updateTime != null" > "updateTime" = #{updateTime},</if>   
        </set>
		where  code=#{depCode}
	   </update>
	   
	    <!-- 根据Code查询组织-->
      <select id="queryOrgByCode"  resultType="com.koron.inwlms.bean.VO.sysManager.OrgVO">
          select  id as "orgId",code as "orgCode",name as "orgName",type as "orgType"
          from "SM_organize"  
          where    code=#{orgCode}
      </select>
      
        <!-- 根据部门Code查询部门人员-->
      <select id="queryDeptUser"  parameterType="com.koron.inwlms.bean.DTO.sysManager.DeptDTO" resultType="com.koron.inwlms.bean.VO.sysManager.UserVO">
          select "user".id as "userId","user"."loginName",case when "user".phone is null then '' else "user".phone end ,case when "user"."Email" is null then '' else "user"."Email" end,"user".name,case when "user".position is null then -1 else "user".position end,case when "user".sex is null then -1 else "user".sex end,"user".photo,"user"."openID","user".status,"user"."workNo",
		  "user"."whetUse","user"."createBy","user"."createTime","user"."updateBy","user"."updateTime",case when "dept".name is null then '' else "dept".name end as "depname"      
		   from "SM_user" as "user"       
		   left join "SM_userDept" as "userdept" on "userdept"."userCode"="user".code    
		   left join "SM_department" as "dept"   on "dept".code="userdept"."deptCode"   
          where "dept".code=#{depCode} and "user"."whetUse"=0
          order by "user"."createTime" desc
          limit #{pageCount} OFFSET #{pageCount}*(#{page}-1);
      </select>
      <!--根据角色Code加载角色人员总条数 -->
     <select id="getDeptUserCount"   resultType="java.lang.Integer">
         select count(*)
           from "SM_user" as "user"       
		   left join "SM_userDept" as "userdept" on "userdept"."userCode"="user".code    
		   left join "SM_department" as "dept"   on "dept".code="userdept"."deptCode"   
          where "dept".code=#{depCode}  and "user"."whetUse"=0
      </select>
      
     <!--添加菜单-->
     <insert id="addMenu" parameterType="com.koron.inwlms.bean.DTO.sysManager.MenuDTO">  
        insert into "SM_moduleMenu"(code,"moduleNo","moduleName","linkAddress","createBy","createTime","updateBy","updateTime")
        values(#{menuCode},#{moduleNo},#{moduleName},#{linkAddress},#{createBy},#{createTime},#{updateBy},#{updateTime})      
     </insert>
     
     <!--加载角色权限菜单-->
     <select id="queryRoleMenuByRoleCode"  parameterType="com.koron.inwlms.bean.DTO.sysManager.DeptDTO" resultType="com.koron.inwlms.bean.VO.sysManager.RoleMenusVO">
         select "SM_treeDet".*,"menu".id as "menuId","menu".code as "moduleCode","menu"."moduleNo" as "moduleNo",
		"menu"."moduleName" as "moduleName","menu"."linkAddress" as "linkAddress",
		"role".code as "roleCode","role".name as "roleName",case when string_agg(to_char("rolemenu".op,'9'),',') is null then '' else string_agg(to_char("rolemenu".op,'9'),',') end as op
		from "SM_moduleMenu" as "menu"
		left join "SM_treeDet" on "SM_treeDet".foreignkey="menu".code
		left join "SM_roleMenus" as "rolemenu" on "rolemenu"."moduleCode"="menu".code and "rolemenu"."roleCode"=
		#{roleCode}
		left join "SM_userRole" as "role" on "role"."code"="rolemenu"."roleCode" and "role".code=#{roleCode}
		GROUP BY "menu".id ,"menu".code ,"menu"."moduleNo",
		"menu"."moduleName" ,"menu"."linkAddress",
		"role".code ,"role".name,
		"SM_treeDet".seq,"SM_treeDet".childmask,"SM_treeDet".foreignkey,"SM_treeDet".mask,
		"SM_treeDet".parentmask,"SM_treeDet".id
      </select>
      
       <!-- 批量删除SM_roleMenus的操作(根据roleCode 和 moduleCode) -->
     <delete id="deleteManyOP">
         delete from "SM_roleMenus" where ("roleCode","moduleCode") in
         <foreach item="item" index="index" collection="list" separator="," open="(" close=")">
           (#{item.roleCode},#{item.moduleCode})
          </foreach>
     </delete>
     
     <!-- 遍历插入角色菜单权限明细表SM_roleMenus信息记录 -->
    <insert id="addManyRoleMenu" parameterType="java.util.List">  
        insert into "SM_roleMenus"("roleCode","moduleCode",op,"createBy","createTime","updateBy","updateTime")values
        <foreach collection="list" index="index" separator="," item="item">
          (#{item.roleCode},#{item.moduleCode},#{item.op},#{item.createBy},#{item.createTime},#{item.updateBy},#{item.updateTime})  
        </foreach>      
    </insert>
    
     <!--模糊查询部门接口-->
     <select id="queryDept"  parameterType="com.koron.inwlms.bean.DTO.sysManager.DeptDTO" resultType="com.koron.inwlms.bean.VO.sysManager.DeptVO">
         select "dept".id as "depId","dept"."name" as "depName","dept".code as "depCode","dept".status as "status"
         from "SM_department" as "dept"
        <trim prefix="where" prefixOverrides="and|or">
		 <if test="depName != null"> and "dept".name like '%${depName}%'</if>  
		 <if test="status != null"> and "dept".status=#{status}</if>         
	   </trim>
	    limit #{pageCount} OFFSET #{pageCount}*(#{page}-1);
      </select>
       <!--模糊查询部门接口部门总数量-->
      <select id="getDeptCount"  parameterType="com.koron.inwlms.bean.DTO.sysManager.DeptDTO" resultType="java.lang.Integer">
         select count(*)
         from "SM_department" as "dept"      
      </select>
          
       <!--通过模块菜单Code和角色加载该角色所有菜单以及可操作的权限-->
     <select id="queryRoleMenuByRoleMenu"  parameterType="com.koron.inwlms.bean.DTO.sysManager.RoleMenuDTO" resultType="com.koron.inwlms.bean.VO.sysManager.RoleMenusVO">
         	select "SM_treeDet".*, "menu".id as "moduleId","menu".code as "moduleCode","menu"."moduleNo" as "moduleNo",
		"menu"."moduleName" as "moduleName","menu"."linkAddress" as "linkAddress",
		"role".code as "roleCode","role".name as "roleName",case when string_agg(to_char("rolemenu".op,'9'),',') is null then '' else string_agg(to_char("rolemenu".op,'9'),',') end as op
		from (
		select * from  "SM_moduleMenu" where code in 
		<foreach item="item" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        )
		as "menu"
		left join "SM_treeDet" on "SM_treeDet".foreignkey="menu".code
		left join "SM_roleMenus" as "rolemenu" on "rolemenu"."moduleCode"="menu".code  and "rolemenu"."roleCode"=#{roleMenuDTO.roleCode}
		left join "SM_userRole" as "role" on "role"."code"="rolemenu"."roleCode"  and "role"."code"=#{roleMenuDTO.roleCode}
		GROUP BY "menu".id ,"menu".code ,"menu"."moduleNo",
		"menu"."moduleName" ,"menu"."linkAddress",
		"role".code ,"role".name,"SM_treeDet".seq,"SM_treeDet".childmask,"SM_treeDet".foreignkey,"SM_treeDet".mask,
		"SM_treeDet".parentmask,"SM_treeDet".id
      </select>
      
      <!--根据moduleName 查询moduleCode -->
     <select id="queryMenuOP"  parameterType="com.koron.inwlms.bean.DTO.sysManager.ModuleMenuDTO" resultType="com.koron.inwlms.bean.VO.sysManager.ModuleMenuVO">
        select  "menu".id as "moduleId","menu".code as "moduleCode","menu"."moduleNo" as "moduleNo",
		"menu"."moduleName" as "moduleName","menu"."linkAddress" as "linkAddress"
        from "SM_moduleMenu" as "menu"
        where "menu"."moduleName"=#{moduleName}
      </select>

     <!--通过模块菜单Code和用户code查询该模块菜单操作权限 -->
     <select id="queryOPByCode"   parameterType="com.koron.inwlms.bean.DTO.sysManager.RoleMenuDTO" resultType="com.koron.inwlms.bean.VO.sysManager.RoleMenusVO">
        select "menu".id as "moduleId","menu".code as "moduleCode","menu"."moduleNo" as "moduleNo",
		"menu"."moduleName" as "moduleName","menu"."linkAddress" as "linkAddress",case when string_agg(to_char("rolemenu".op,'9'),',') is null then '' else string_agg(to_char("rolemenu".op,'9'),',') end as op
        from "SM_roleMenus" as "rolemenu"
        left join "SM_moduleMenu" as "menu" on "menu".code="rolemenu"."moduleCode"
        left join "SM_userRoleRelation" as "rela" on "rela"."roleCode"="rolemenu"."roleCode"
        left join "SM_user" as "user" on "user".code="rela"."userCode"
        where "rolemenu"."moduleCode"=#{moduleCode} and "user".code=#{userCode}
        GROUP BY "menu".id ,"menu".code ,"menu"."moduleNo",
		"menu"."moduleName" ,"menu"."linkAddress"
      </select>

      
</mapper>