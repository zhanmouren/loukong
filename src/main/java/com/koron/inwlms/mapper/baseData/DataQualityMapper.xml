<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.koron.inwlms.mapper.baseData.DataQualityMapper">

    <insert id="addZoneConfDataQuality" parameterType="com.koron.inwlms.bean.VO.baseInf.DataQualityVO" >
        insert into gis_zoneconfhistory("BatchNo","originRow",row,integrity,accuracy,availability,timely,consistency,status,"createBy","createTime",type)
        values(#{BatchNo},#{originRow},#{row},#{integrity},#{accuracy},#{availability},#{timely},#{consistency},#{status},#{createBy},now(),#{type})
    </insert>

    <select id="queryMonitoringQuantity" parameterType="com.koron.inwlms.bean.DTO.baseInf.DataQualityDTO" resultType="com.koron.inwlms.bean.VO.baseInf.MonitorQuantityVO">

         select * from(
            select 0 as rows,gis_scada_station.name,ana_monitorpoint_month.id,ana_monitorpoint_month."moniCode",code,lc_app_dim_month."yearMonth",value, t."lastValue",(value-t."lastValue") as "curValue",t."last3avg",ana_monitorpoint_month."verifyValue",(ana_monitorpoint_month."verifyValue"-t."lastValue") as "verifyFlow",ana_monitorpoint_month.status
            from ana_monitorpoint_month
            join lc_app_dim_month on ana_monitorpoint_month."yearMonth" = lc_app_dim_month.id
            left join LATERAL(select * from "queryLastMonthMoni"(ana_monitorpoint_month."moniCode",ana_monitorpoint_month."yearMonth",lc_app_dim_month."yearMonth"))t on ana_monitorpoint_month."yearMonth" = t."yearMonth" and ana_monitorpoint_month."moniCode"=t."moniCode"
            left join gis_scada_station on ana_monitorpoint_month."moniCode" = gis_scada_station.p_code
            where code ='MOMR'
            <if test="status != null ">
                and ana_monitorpoint_month.status = #{status}
            </if>
            <if test="pointName != null and pointName!=''">
                and gis_scada_station.name like '%'||#{pointName}||'%'
            </if>
            <if test="mon != null and mon != ''">
                and lc_app_dim_month."yearMonth"=cast(#{mon} as integer)
            </if>
            <if test="flag != null and flag=='on'">
                and (value-t."lastValue") &lt; 0
            </if>
            order by lc_app_dim_month."yearMonth" desc
            <if test="pageCount != null and pageCount != null">
                limit #{pageCount} OFFSET #{pageCount}*(#{page}-1)
            </if>
         )m
         union all
        select count(*) as rows,'',0,'','',0,0, 0,0,0,0,0,0
        from ana_monitorpoint_month
        join lc_app_dim_month on ana_monitorpoint_month."yearMonth" = lc_app_dim_month.id
        left join LATERAL(select * from "queryLastMonthMoni"(ana_monitorpoint_month."moniCode",ana_monitorpoint_month."yearMonth",lc_app_dim_month."yearMonth"))t on ana_monitorpoint_month."yearMonth" = t."yearMonth" and ana_monitorpoint_month."moniCode"=t."moniCode"
        left join gis_scada_station on ana_monitorpoint_month."moniCode" = gis_scada_station.p_code
        where code ='MOMR'
        <if test="status != null ">
            and ana_monitorpoint_month.status = #{status}
        </if>
        <if test="pointName != null and pointName!=''">
            and gis_scada_station.name like '%'||#{pointName}||'%'
        </if>
        <if test="mon != null and mon != ''">
            and lc_app_dim_month."yearMonth"=cast(#{mon} as integer)
        </if>
        <if test="flag != null and flag=='on'">
            and (value-t."lastValue") &lt; 0
        </if>
    </select>

    <select id="queryMonRep" parameterType="com.koron.inwlms.bean.DTO.baseInf.DataQualityDTO" resultType="com.koron.inwlms.bean.VO.baseInf.MonRepVO">
        select * from(
        select 0 as rows,id,reportdate,reporttime,type,row,integrity,accuracy,available,timely,consistence,rating from
        app_mon_report
        where 1=1
        <if test="mon != null and mon != ''">
            and reportdate=#{mon}
        </if>
        <if test="pageCount != null and pageCount != null">
            limit #{pageCount} OFFSET #{pageCount}*(#{page}-1)
        </if>
        )t
        union all
         select count(*) as rows,0,'' ,'','',0,0,0,0,0,0,0 from app_mon_report
        where 1=1
        <if test="mon != null and mon != ''">
            and reportdate=#{mon}
        </if>
    </select>

    <select id="queryDataImpact"  resultType="com.koron.inwlms.bean.VO.baseInf.DataImpactVO">

        select sum(pipe_line) as pipeLine,sum(pipe_diameter_len)as pipeDiameterLen,sum(valve_line)as valveLine,sum(valve_pos_line) as valvePosLine,sum(point_line) as pointLine,sum(point_pos_line) as pointPosLine,sum(zone_line) as zoneLine,sum(zone_rel_line) as zoneRelLine  from(
            select count(*) as pipe_line, sum(case when DIAMETER IS NULL or ASSETSLENGTH is null then 1 else 0 end) as pipe_diameter_len ,0 as valve_line,0 as valve_pos_line ,0 as point_line,0 as point_pos_line,0 as zone_line,0 as zone_rel_line   from gis_pipe
            /*
            union all
            select 0,0,count(*) as valve_line,sum(case when LOCATION is null or LOCATION=''  then 1 else 0 end) as valve_pos_line,0,0,0,0  from gis_regulatevalve
            union all
            select 0,0,count(*) as valve_line,sum(case when LOCATION is null or LOCATION=''  then 1 else 0 end) as valve_pos_line,0,0,0,0 from gis_convalve
            */
            union all
            select 0,0,0,0,count(*) as point_line,sum(case when LOCATION is null or LOCATION=''  then 1 else 0 end) as point_pos_line,0,0  from gis_scada_station
            union all
            select 0,0,0,0,0,0,count(*) as zone_line ,sum(case when gis_zone_point.id is not null or gis_zone_meter.id is not null then 1 else 0 end) as zone_rel_line from gis_exist_zone
            left join gis_zone_point on  gis_exist_zone."p_code" = gis_zone_point."zoneNo"
            left join gis_zone_meter on  gis_exist_zone."p_code" = gis_zone_meter."zoneNo"
        )t
    </select>

    <update id="updateMonitoringQuantity" parameterType="com.koron.inwlms.bean.DTO.baseInf.DataQualityDTO">
            update ana_monitorpoint_month
            <set>
                <if test="verifyValue != null "> "verifyValue" = #{verifyValue}, </if>
                <if test="status != null "> "status" = #{status},"updateBy"=#{updateBy},"updateTime"=now(), </if>
            </set>
            where 1=1 and  id in
            <if test="refID != null and refID.length > 0">
            <foreach item="item" collection="refID" separator="," open="(" close=")" index="">
                     #{item}
            </foreach>
            </if>
    </update>

</mapper>