<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.koron.inwlms.mapper.baseData.IMDataMapper">

    <delete id="deleteMonitorDataByBatchNo" parameterType="java.lang.String">
        delete from mi_monitordata where "BatchNo" =#{BatchNo};
        delete from mi_importdatahistory where "BatchNo" =#{BatchNo}
    </delete>

    <delete id="deleteMeterData">
        delete from mi_readwaterinfo where "id" =#{refID}
    </delete>

    <delete id="deleteMeterDataByBatch" parameterType="java.lang.String">
        delete from mi_readwaterinfo where "BatchNo" =#{BatchNo}
        delete from mi_importdatahistory where "BatchNo" =#{BatchNo} and type = '2'
    </delete>

    <insert id="addZoneConfDataQuality" parameterType="com.koron.inwlms.bean.VO.baseInf.DataQualityVO">
        insert into mi_importdatahistory("BatchNo","originRow",row,integrity,accuracy,availability,timely,consistency,status,"createBy","createTime",type)
        values(#{BatchNo},#{originRow},#{row},#{integrity},#{accuracy},#{availability},#{timely},#{consistency},#{status},#{createBy},now(),#{type})
    </insert>

    <insert id="addBatchMeterData" >
        insert into mi_readwaterinfo(
        user_no,user_name,user_type,prior_period_num,prior_period_date,meter_reading_date,currend_period_num,reality_water,meter_reading_way,"BatchNo","createBy","createTime"
        )values
        <if test="excelBeans != null and excelBeans.size > 0">
            <foreach collection="excelBeans" item="item" index="" separator=",">
                (#{item.userNo},#{item.userName},#{item.userType},cast(#{item.lastReading} as numeric),#{item.lastTime},#{item.recordTime},cast(#{item.meterReading} as numeric),cast(#{item.mwo} as numeric),#{item.readType},#{item.BatchNo},#{item.createBy},#{item.createTime})
            </foreach>
        </if>
    </insert>

    <insert id="addBatchMointorData" >
        insert into mi_monitordata(
             status,"pointID",type,"lastTime","flowRate","upstreamPressure","downstreamPressure",noise,threshold,"BatchNo","createBy","createTime"
        )values
        <if test="excelBeans != null and excelBeans.size > 0">
            <foreach collection="excelBeans" item="item" index="" separator=",">
					(#{item.status},#{item.pointID},#{item.type},#{item.lastTime},cast(#{item.flowRate} as numeric),cast(#{item.upstreamPressure} as numeric),cast(#{item.downstreamPressure} as numeric),cast(#{item.noise} as numeric),cast(#{item.threshold} as numeric),#{item.BatchNo},#{item.createBy},#{item.createTime})
            </foreach>
        </if>

    </insert>

    <select id="queryMonitorDataHistoryList" parameterType="com.koron.inwlms.bean.DTO.baseInf.MonitorDataDTO"  resultType="com.koron.inwlms.bean.VO.baseInf.MonitorDataHisVO">
        select * from(
        select 0 as
        rows,id,type,"BatchNo","originRow",row,integrity,accuracy,availability,timely,consistency,status,"createBy",to_char("createTime",'YYYY-MM-DD')as
        createTime from mi_importdatahistory
            <trim prefix="where" prefixOverrides="and|or">
                <if test="begD != null  and begD !=''"> and to_char(a."createTime",'YYYY-MM-DD') &gt;= #{begD}</if>
                <if test="endD != null  and endD !=''"> and to_char(a."createTime",'YYYY-MM-DD') &lt;= #{endD}</if>
                <if test="type != null  and type !=''"> and type = #{type}</if>
            </trim>
            order by "createTime" desc
            limit #{pageCount} OFFSET #{pageCount}*(#{page}-1)
        )t
        union all
            select count(*) as rows,0,'','',0,0,0.0,0.0,0.0,0.0,0.0,0,'','' from mi_importdatahistory
            <trim prefix="where" prefixOverrides="and|or">
                <if test="begD != null  and begD !=''"> and to_char(a."createTime",'YYYY-MM-DD') &gt;= #{begD}</if>
                <if test="endD != null  and endD !=''"> and to_char(a."createTime",'YYYY-MM-DD') &lt;= #{endD}</if>
                <if test="type != null  and type !=''"> and type = #{type}</if>
            </trim>

    </select>

    <select id="queryReadMeterDataHistoryList" parameterType="com.koron.inwlms.bean.DTO.baseInf.MeterDataDTO"  resultType="com.koron.inwlms.bean.VO.baseInf.MeterDataHisVO">
        select * from(
            select 0 as rows,type,"BatchNo","originRow","row",integrity,accuracy,availability,timely,consistency,status,"createBy",to_char("createTime",'YYYY-MM-DD') as "createTime","updateBy",to_char("updateTime",'YYYY-MM-DD')as "updateTime" from mi_importdatahistory
            where 1=1
                <if test="begD != null  and begD !=''"> and to_char(a."createTime",'YYYY-MM-DD') &gt;= #{begD}</if>
                <if test="endD != null  and endD !=''"> and to_char(a."createTime",'YYYY-MM-DD') &lt;= #{endD}</if>
             and type = '2'
            order by "createTime" desc
            limit #{pageCount} OFFSET #{pageCount}*(#{page}-1)
        )t
        union all
         select count(*) as rows,'','',0,0,0,0,0,0,0,0,'','','','' from mi_importdatahistory
            where 1=1
                <if test="begD != null  and begD !=''"> and to_char(a."createTime",'YYYY-MM-DD') &gt;= #{begD}</if>
                <if test="endD != null  and endD !=''"> and to_char(a."createTime",'YYYY-MM-DD') &lt;= #{endD}</if>
             and type = '2'
    </select>

    <select id="queryMonitorDataByBatchNo"   resultType="com.koron.inwlms.bean.VO.baseInf.MonitorDataVO">
        select * from(
            select 0 as rows,mi_monitordata.id,status,"pointID",type,"lastTime",noise,threshold,"flowRate",mi_monitordata."createBy",to_char("createTime",'YYYY-MM-DD HH:MM:SS') as createTime from mi_monitordata
            <trim prefix="where" prefixOverrides="and|or">
                <if test="batchNo != null "> and "BatchNo" = #{batchNo}</if>
            </trim>
            limit #{pageCount} OFFSET #{pageCount}*(#{page}-1)
        )t
        union all
        select count(*) as rows,0,'','','','',0.0,0.0,0.0,'',''
        from mi_monitordata
        <trim prefix="where" prefixOverrides="and|or">
                <if test="batchNo != null "> and "BatchNo" = #{batchNo}</if>
         </trim>

    </select>

    <select id="queryMeterDataByBatchNo" parameterType="com.koron.inwlms.bean.DTO.baseInf.MeterDataDTO"   resultType="com.koron.inwlms.bean.VO.baseInf.MeterDataVO">
        select * from(
        select 0 as rows,mi_readwaterinfo.id,user_no as "userNo",user_name as "userName",user_type as "userType",prior_period_num as "priorPeriodNum",prior_period_date as "priorPeriodDate",meter_reading_date as "meterReadingDate",currend_period_num as "currendPeriodNum",reality_water as "realityWater",meter_reading_way "meterReadingWay","createBy",to_char("createTime",'YYYY-MM-DD') as "createTime","updateBy",to_char("updateTime",'YYYY-MM-DD') as "updateTime","BatchNo",gis_meter.p_code as "meterNo",gis_meter.pipe_d as "pipeD"
        from mi_readwaterinfo
        left join gis_meter on mi_readwaterinfo.user_no=gis_meter.accountid
        <trim prefix="where" prefixOverrides="and|or">
            <if test="BatchNo != null "> and  "BatchNo" = #{BatchNo}</if>
        </trim>
        order by "meter_reading_date" desc
        limit #{pageCount} OFFSET #{pageCount}*(#{page}-1)
        )t
        union all
        select count(*) as rows,0,'','','',0,'','',0,0,'','','','','','','','' from mi_readwaterinfo
        <trim prefix="where" prefixOverrides="and|or">
            <if test="BatchNo != null "> and  "BatchNo" = #{BatchNo} </if>
        </trim>
    </select>

    <select id="queryPressureFlowList" parameterType="com.koron.inwlms.bean.DTO.baseInf.MonitorDataDTO"  resultType="com.koron.inwlms.bean.VO.baseInf.MonitorDataVO">
        select * from(
        select 0 as rows,mi_monitordata.id,status,"pointID",gis_scada_station.name,mi_monitordata.type,"lastTime","upstreamPressure","downstreamPressure","flowRate",mi_monitordata."createBy",to_char(mi_monitordata."createTime",'YYYY-MM-DD HH:MM:SS') as "createTime","queryFirstZoon"(tbltree.seq) as "firstZoon",gis_zone_point.type as "useType" from mi_monitordata
        left join gis_scada_station on mi_monitordata."pointID" = gis_scada_station.p_code
        left join gis_zone_point on mi_monitordata."pointID" = gis_zone_point."pointNo"
        left join tbltree on gis_zone_point."zoneNo" = tbltree.foreignkey
        <trim prefix="where" prefixOverrides="and|or">
            <if test="status != null and status != '' "> and status = #{status}</if>
            <if test="dmaType != null and dmaType != '' "> </if>
            <if test="use != null and use != '' "> </if>
            <if test="pointID != null and pointID != '' "> and "pointID" like '%'||#{pointID}||'%'</if>
            <if test="first != null and first != '' "> </if>
            <if test="second != null and second != '' "> </if>
            <if test="DMA != null and DMA != '' "> </if>
            <if test="begD != null and begD != '' "> and "lastTime" &gt;=#{begD} </if>
            <if test="endD != null and endD != '' "> and "lastTime" &lt;=#{endD} </if>
            <if test=" 1==1 "> and mi_monitordata.type='1' </if>
        </trim>
        <!--监测数据-->
        union all
        select distinct 0 as rows,0 as id,'0',nw_gdh_raw.station as pointID,nw_gdh_raw.name,'' as type,to_char(to_timestamp(nw_gdh_raw.datatime), 'YYYY-MM-DD HH24:MI:SS') as "lastTime",
        sum(case when nw_gdh_ssensor.stype='P1' then cast(nw_gdh_raw."value" as numeric(18,2)) else 0 end) as "upstreamPressure",
        0 as downstreamPressure,
        sum(case when nw_gdh_ssensor.stype='Q4' then cast(nw_gdh_raw."value" as numeric(18,2)) else 0 end) as "flowRate",'','',
        '' as "firstZoon",'' as "useType"
        from
        (select nw_gdh_raw.station,nw_gdh_raw."value",nw_gdh_raw.code,nw_gdh_raw.datatime,gis_scada_station."name" from nw_gdh_raw
        join gis_scada_station on nw_gdh_raw.station = gis_scada_station.p_code
        limit #{pageCount}*#{page}
        )nw_gdh_raw

        join nw_gdh_ssensor on nw_gdh_ssensor.station=nw_gdh_raw.station and nw_gdh_raw.code = nw_gdh_ssensor.code
        group by nw_gdh_raw.station,nw_gdh_raw.name,nw_gdh_raw.datatime
        <!--
        union all
        select distinct 0 as rows,0 as id,'0',nw_gdh_raw.station as pointID,nw_gdh_raw.name,'' as type,to_char(to_timestamp(nw_gdh_raw.datatime), 'YYYY-MM-DD HH24:MI:SS') as "lastTime",
        sum(case when nw_gdh_ssensor.stype='P1' then cast(nw_gdh_raw."value" as numeric(18,2)) else 0 end) as "upstreamPressure",
        0 as downstreamPressure,
        sum(case when nw_gdh_ssensor.stype='Q4' then cast(nw_gdh_raw."value" as numeric(18,2)) else 0 end) as "flowRate",'','',
        "queryFirstZoon"(tbltree.seq) as "firstZoon",gis_zone_point.type as "useType"
        from
        (select nw_gdh_raw.station,nw_gdh_raw."value",nw_gdh_raw.code,nw_gdh_raw.datatime,gis_scada_station."name" from nw_gdh_raw
        join gis_scada_station on nw_gdh_raw.station = gis_scada_station.p_code
        limit #{pageCount}*#{page}
        )nw_gdh_raw

        join nw_gdh_ssensor on nw_gdh_ssensor.station=nw_gdh_raw.station and nw_gdh_raw.code = nw_gdh_ssensor.code
        left join gis_zone_point on nw_gdh_raw.station = gis_zone_point."pointNo"
        left join tbltree on gis_zone_point."zoneNo" = tbltree.foreignkey
        group by nw_gdh_raw.station,nw_gdh_raw.name,nw_gdh_raw.datatime,tbltree.seq,gis_zone_point.type
        -->
        <!--end-->
        <if test="pageCount !=null and page !=null">
            limit #{pageCount} OFFSET #{pageCount}*(#{page}-1)
        </if>
        )t
        union all
        select count(*) as rows,0 as id,'' as status,'' as "pointID",'' as name,'' as type,'' as "lastTime",0.0 as "upstreamPressure",0.0 as "downstreamPressure",0.0 as "flowRate",'' as "createBy",'' as "createTime",'' as "firstZoon",'' as "useType"
        from(
        select count(*) as rows,0 as id,'' as status,'' as "pointID",'' as name,'' as type,'' as "lastTime",0.0 as
        "upstreamPressure",0.0 as "downstreamPressure",0.0 as "flowRate",'' as "createBy",'' as "createTime",'' as
        "firstZoon",'' as "useType"
        from mi_monitordata
            <trim prefix="where" prefixOverrides="and|or">
                <if test="status != null and status != '' "> and status = #{status}</if>
                <if test="dmaType != null and dmaType != '' "> </if>
                <if test="use != null and use != '' "> </if>
                <if test="pointID != null and pointID != '' "> and "pointID" like '%'||#{pointID}||'%'</if>
                <if test="first != null and first != '' "> </if>
                <if test="second != null and second != '' "> </if>
                <if test="DMA != null and DMA != '' "> </if>
                <if test="begD != null and begD != '' "> and "lastTime" &gt;=#{begD} </if>
                <if test="endD != null and endD != '' "> and "lastTime" &lt;=#{endD} </if>
                <if test=" 1==1 "> and mi_monitordata.type='1' </if>
            </trim>
            <!--监测数据-->
            union all
            select count(*) as rows,0 as id,'' as status,'' as "pointID",'' as name,'' as type,'' as "lastTime",0.0 as "upstreamPressure",0.0 as "downstreamPressure",0.0 as "flowRate",'' as "createBy",'' as "createTime",'' as "firstZoon",'' as "useType"
            from
            (select nw_gdh_raw.station,nw_gdh_raw."value",nw_gdh_raw.code,nw_gdh_raw.datatime,gis_scada_station."name" from nw_gdh_raw
            join gis_scada_station on nw_gdh_raw.station = gis_scada_station.p_code
            limit 1000
            )nw_gdh_raw
            group by nw_gdh_raw.station,nw_gdh_raw.name,nw_gdh_raw.datatime
            <!--end-->
            )s
    </select>

    <select id="queryPressureFlowDet"   resultType="com.koron.inwlms.bean.VO.baseInf.MonitorDataVO">
        select id,"pointID","lastTime","flowRate","upstreamPressure","downstreamPressure",name,status from mi_monitordata
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null ">and  id = #{id}</if>
        </trim>
    </select>

    <select id="queryNoiseList" parameterType="com.koron.inwlms.bean.DTO.baseInf.MonitorDataDTO"  resultType="com.koron.inwlms.bean.VO.baseInf.MonitorDataVO">
       select * from(
        select 0 as rows,mi_monitordata.id,status,"pointID",gis_scada_station.name,mi_monitordata.type,"lastTime",noise,threshold,mi_monitordata."createBy",to_char(mi_monitordata."createTime",'YYYY-MM-DD HH:MM:SS') as createTime,"queryFirstZoon"(tbltree.seq) as "firstZoon",gis_zone_point.type as "useType" from mi_monitordata
        left join gis_scada_station on mi_monitordata."pointID" = gis_scada_station.p_code
        left join gis_zone_point on mi_monitordata."pointID" = gis_zone_point."pointNo"
        left join tbltree on gis_zone_point."zoneNo" = tbltree.foreignkey
        <trim prefix="where" prefixOverrides="and|or">
            <if test="status != null and status != '' "> and status = #{status}</if>
            <if test="dmaType != null and dmaType != '' "> </if>
            <if test="use != null and use != '' "> </if>
            <if test="pointID != null and pointID != '' "> and "pointID" like '%'||#{pointID}||'%'</if>
            <if test="first != null and first != '' "> </if>
            <if test="second != null and second != '' "> </if>
            <if test="DMA != null and DMA != '' "> </if>
            <if test="begD != null and begD != '' "> and "lastTime" &gt;=#{begD} </if>
            <if test="endD != null and endD != '' "> and "lastTime" &lt;=#{endD} </if>
            <if test=" 1==1 "> and mi_monitordata.type='2' </if>
        </trim>
        <if test="pageCount !=null and page !=null">
            limit #{pageCount} OFFSET #{pageCount}*(#{page}-1)
        </if>
        )t
        union all
        select count(*) as rows,0,'','','','','',0.0,0.0,'','','',''
        from mi_monitordata
        <trim prefix="where" prefixOverrides="and|or">
            <if test="status != null and status != '' "> and status = #{status}</if>
            <if test="dmaType != null and dmaType != '' "> </if>
            <if test="use != null and use != '' "> </if>
            <if test="pointID != null and pointID != '' "> and "pointID" like '%'||#{pointID}||'%'</if>
            <if test="first != null and first != '' "> </if>
            <if test="second != null and second != '' "> </if>
            <if test="DMA != null and DMA != '' "> </if>
            <if test="begD != null and begD != '' "> and "lastTime" &gt;=#{begD} </if>
            <if test="endD != null and endD != '' "> and "lastTime" &lt;=#{endD} </if>
            <if test=" 1==1 "> and mi_monitordata.type='2' </if>
        </trim>
    </select>

    <select id="queryNoiseDet"   resultType="com.koron.inwlms.bean.VO.baseInf.MonitorDataVO">
        select id,"pointID","lastTime",noise,threshold,name,status from mi_monitordata
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null ">and  id = #{id}</if>
        </trim>
    </select>


    <update id="updateMonitorDet" parameterType="com.koron.inwlms.bean.DTO.baseInf.MonitorDataDTO">
        update mi_monitordata
        <set>
            <if test="status != null  and status !=''" > "status" = #{status},  </if>
            <if test="pointID != null and pointID !=''" > "pointID" = #{pointID},</if>
            <if test="name != null and name != ''" > "name" = #{name}, </if>
            <if test="type != null and type != ''" > "type" = #{type}, </if>
            <if test="lastTime != null and lastTime != ''" > "lastTime" = #{lastTime}, </if>
            <if test="noise != null " > noise = #{noise}, </if>
            <if test="threshold != null " > threshold = #{threshold}, </if>
            <if test="updateBy != null and updateBy!=''" >  "updateBy" = #{updateBy},</if>
            <if test="updateBy != null" > "updateTime" = Now(),</if>
        </set>
        where id=#{id}
    </update>

    <select id="queryReadMeterDataList" parameterType="com.koron.inwlms.bean.DTO.baseInf.MeterDataDTO" resultType="com.koron.inwlms.bean.VO.baseInf.MeterDataVO">
       select * from(
        select 0 as rows,mi_readwaterinfo.id,user_no as "userNo",user_name as "userName",user_type as "userType",prior_period_num as "priorPeriodNum",prior_period_date as "priorPeriodDate",meter_reading_date as "meterReadingDate",currend_period_num as "currendPeriodNum",reality_water as "realityWater",meter_reading_way "meterReadingWay","createBy",to_char("createTime",'YYYY-MM-DD') as "createTime","updateBy",to_char("updateTime",'YYYY-MM-DD') as "updateTime","BatchNo",gis_meter.p_code as "meterNo",gis_meter.pipe_d as "pipeD"
        from mi_readwaterinfo
        left join gis_meter on mi_readwaterinfo.user_no=gis_meter.accountid
        <trim prefix="where" prefixOverrides="and|or">
            <if test="readType != null  and readType !=''"> and meter_reading_way= #{readType}</if>
            <if test="usrType != null  and usrType !=''"> and user_type= #{usrType}</if>
            <if test="userNo != null  and userNo !=''"> and user_no like '%'||#{userNo}||'%'</if>
            <if test="begD != null  and begD !=''"> and to_char("meter_reading_date",'YYYY-MM-DD') &gt;= #{begD}</if>
            <if test="endD != null  and endD !=''"> and to_char("meter_reading_date",'YYYY-MM-DD') &lt;= #{endD}</if>
        </trim>
        order by "meter_reading_date" desc
        <if test="pageCount !=null and page !=null">
            limit #{pageCount} OFFSET #{pageCount}*(#{page}-1)
        </if>
        )t
        union all
        select count(*) as rows,0,'','','',0,'','',0,0,'','','','','','','','' from mi_readwaterinfo
        <trim prefix="where" prefixOverrides="and|or">
            <if test="readType != null  and readType !=''"> and meter_reading_way= #{readType}</if>
            <if test="usrType != null  and usrType !=''"> and user_type= #{usrType}</if>
            <if test="userNo != null  and userNo !=''"> and user_no like '%'||#{userNo}||'%'</if>
            <if test="begD != null  and begD !=''"> and to_char("meter_reading_date",'YYYY-MM-DD') &gt;= #{begD}</if>
            <if test="endD != null  and endD !=''"> and to_char("meter_reading_date",'YYYY-MM-DD') &lt;= #{endD}</if>
        </trim>
    </select>

    <select id="queryReadMeterDataDet" resultType="com.koron.inwlms.bean.VO.baseInf.MeterDataVO">
        select * from mi_readwaterinfo
        where 1=1
        <if test="id != null "> and id= #{id}</if>
    </select>

    <update id="updateReadMeterDataDet" parameterType="com.koron.inwlms.bean.DTO.baseInf.MeterDataDTO">
        update mi_readwaterinfo
        <set>
            <if test="readType != null  and readType !=''" > "meter_reading_way" = #{readType},  </if>
            <if test="serialNo != null and serialNo !=''" > "serialNo" = #{serialNo},</if>
            <if test="waterMeterNo != null and waterMeterNo != ''" > "waterMeterNo" = #{waterMeterNo}, </if>
            <if test="lastTime != null and lastTime != ''" > "lastTime" = #{lastTime}, </if>
            <if test="lastReading != null " > lastReading = #{lastReading}, </if>
            <if test="recordTime != null and recordTime != ''" > "recordTime" = #{recordTime}, </if>
            <if test="meterReading != null " > meterReading = #{meterReading}, </if>
            <if test="mwo != null " > mwo = #{mwo}, </if>
            <if test="updateBy != null and updateBy!=''" >  "updateBy" = #{updateBy},</if>
            <if test="updateTime != null" > "updateTime" = Now(),</if>
        </set>
        where id=#{id}
    </update>


</mapper>